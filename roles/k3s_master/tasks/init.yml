---

- name: Clean previous runs of k3s-init
  ansible.legacy.systemd:
    name: k3s-init
    state: stopped
  failed_when: false

- name: Clean previous runs of k3s-init
  ansible.legacy.command: systemctl reset-failed k3s-init
  failed_when: false
  changed_when: false

- name: Init cluster inside the transient k3s-init service
  ansible.legacy.command:
    cmd: >
      systemd-run -p RestartSec=2
            -p Restart=on-failure
            -p EnvironmentFile=-{{ k3s_systemd_dir }}/k3s.service.env
            -p EnvironmentFile=-{{ k3s_systemd_dir }}/k3s.service.env.token
            -p EnvironmentFile=-{{ k3s_systemd_dir }}/k3s.service.env.agent_token
            --unit=k3s-init
            k3s server {{ k3s_server_args_init }}
    creates: "{{ k3s_systemd_dir }}/k3s.service"

- name: Verification
  block:
    - name: Verify that all nodes actually joined (check k3s-init.service if this fails)
      ansible.legacy.command:
        cmd: k3s kubectl get nodes -l "node-role.kubernetes.io/master=true" -o=jsonpath="{.items[*].metadata.name}"
      register: nodes
      until: nodes.rc == 0 and (nodes.stdout.split() | length) == (groups['master'] | length)
      retries: 30
      delay: 10
      changed_when: false
  always:
    - name: Kill the temporary service used for initialization
      ansible.legacy.systemd:
        name: k3s-init
        state: stopped
      failed_when: false
